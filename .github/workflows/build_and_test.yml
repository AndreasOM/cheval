name:  Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
            target: x86_64-apple-darwin
            features: "minifb"
          - os: macos-11
            target: aarch64-apple-darwin
            features: "minifb"
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            features: "framebuffer,minifb"
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            features: "minifb"

#        os: [macos-11]
#        os: [ubuntu-latest, macos-11, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Ubuntu
        run : sudo apt-get install -y libxkbcommon-dev
        if: matrix.os == 'ubuntu-latest'

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
#          target: aarch64-apple-darwin
          target: ${{ matrix.target }}

      - name: Cache crates
        uses: actions/cache@v2
        env:
          cache-name: cache-crates
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('Cargo.lock') }}

      - name: Run cargo build --release for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }} --features ${{ matrix.features }}


      - name: Run cargo test --release for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --target ${{ matrix.target }} --features ${{ matrix.features }} -- --test-threads 1 --nocapture

