<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1141.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1141.00"> </text><svg id="frames" x="10" width="1180" total_samples="13122"><g><title>cheval`cheval::window::window_minifb::WindowMinifb::render_frame_rgb_a (5,859 samples, 44.65%)</title><rect x="0.0000%" y="869" width="44.6502%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5859"/><text x="0.2500%" y="879.50">cheval`cheval::window::window_minifb::WindowMinifb::render_frame_rgb_a</text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (3 samples, 0.02%)</title><rect x="44.7188%" y="517" width="0.0229%" height="15" fill="rgb(217,0,24)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="527.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (3 samples, 0.02%)</title><rect x="44.7188%" y="501" width="0.0229%" height="15" fill="rgb(221,193,54)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="511.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (3 samples, 0.02%)</title><rect x="44.7188%" y="485" width="0.0229%" height="15" fill="rgb(248,212,6)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="495.50"></text></g><g><title>HIToolbox`HIThemeDrawTextBox (3 samples, 0.02%)</title><rect x="44.7188%" y="469" width="0.0229%" height="15" fill="rgb(208,68,35)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="479.50"></text></g><g><title>HIToolbox`DataEngine::DrawTextBox (3 samples, 0.02%)</title><rect x="44.7188%" y="453" width="0.0229%" height="15" fill="rgb(232,128,0)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="463.50"></text></g><g><title>HIToolbox`invocation function for block in DataEngine::DrawTextBox (3 samples, 0.02%)</title><rect x="44.7188%" y="437" width="0.0229%" height="15" fill="rgb(207,160,47)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="447.50"></text></g><g><title>HIToolbox`TCoreTextEngine::DrawThemeTextBox (3 samples, 0.02%)</title><rect x="44.7188%" y="421" width="0.0229%" height="15" fill="rgb(228,23,34)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="431.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawStyledGlyphsAtPositions (3 samples, 0.02%)</title><rect x="44.7188%" y="405" width="0.0229%" height="15" fill="rgb(218,30,26)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="415.50"></text></g><g><title>CoreUI`CUIDrawStyledGlyphsAtPositions (3 samples, 0.02%)</title><rect x="44.7188%" y="389" width="0.0229%" height="15" fill="rgb(220,122,19)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="399.50"></text></g><g><title>CoreUI`CUIRenderer::DrawStyledGlyphsAtPositions (3 samples, 0.02%)</title><rect x="44.7188%" y="373" width="0.0229%" height="15" fill="rgb(250,228,42)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="383.50"></text></g><g><title>CoreUI`-[CUITextEffectStack drawGlyphs:inContext:usingFont:atPositions:count:lineHeight:inBounds:atScale:] (3 samples, 0.02%)</title><rect x="44.7188%" y="357" width="0.0229%" height="15" fill="rgb(240,193,28)" fg:x="5868" fg:w="3"/><text x="44.9688%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (4 samples, 0.03%)</title><rect x="44.7188%" y="725" width="0.0305%" height="15" fill="rgb(216,20,37)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="735.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (4 samples, 0.03%)</title><rect x="44.7188%" y="709" width="0.0305%" height="15" fill="rgb(206,188,39)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="719.50"></text></g><g><title>HIToolbox`FlushAllBuffers(__CFRunLoopObserver*, unsigned long, void*) (4 samples, 0.03%)</title><rect x="44.7188%" y="693" width="0.0305%" height="15" fill="rgb(217,207,13)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="703.50"></text></g><g><title>HIToolbox`FlushWindowObject(WindowData*, void**, unsigned char) (4 samples, 0.03%)</title><rect x="44.7188%" y="677" width="0.0305%" height="15" fill="rgb(231,73,38)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="687.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (4 samples, 0.03%)</title><rect x="44.7188%" y="661" width="0.0305%" height="15" fill="rgb(225,20,46)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="671.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (4 samples, 0.03%)</title><rect x="44.7188%" y="645" width="0.0305%" height="15" fill="rgb(210,31,41)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="655.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (4 samples, 0.03%)</title><rect x="44.7188%" y="629" width="0.0305%" height="15" fill="rgb(221,200,47)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="639.50"></text></g><g><title>HIToolbox`HIView::SendDraw (4 samples, 0.03%)</title><rect x="44.7188%" y="613" width="0.0305%" height="15" fill="rgb(226,26,5)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="623.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.03%)</title><rect x="44.7188%" y="597" width="0.0305%" height="15" fill="rgb(249,33,26)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="607.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.03%)</title><rect x="44.7188%" y="581" width="0.0305%" height="15" fill="rgb(235,183,28)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="591.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (4 samples, 0.03%)</title><rect x="44.7188%" y="565" width="0.0305%" height="15" fill="rgb(221,5,38)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="575.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (4 samples, 0.03%)</title><rect x="44.7188%" y="549" width="0.0305%" height="15" fill="rgb(247,18,42)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="559.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (4 samples, 0.03%)</title><rect x="44.7188%" y="533" width="0.0305%" height="15" fill="rgb(241,131,45)" fg:x="5868" fg:w="4"/><text x="44.9688%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="44.7569%" y="677" width="0.0229%" height="15" fill="rgb(249,31,29)" fg:x="5873" fg:w="3"/><text x="45.0069%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (3 samples, 0.02%)</title><rect x="44.7569%" y="661" width="0.0229%" height="15" fill="rgb(225,111,53)" fg:x="5873" fg:w="3"/><text x="45.0069%" y="671.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d948fc (9 samples, 0.07%)</title><rect x="44.7798%" y="533" width="0.0686%" height="15" fill="rgb(238,160,17)" fg:x="5876" fg:w="9"/><text x="45.0298%" y="543.50"></text></g><g><title>AGXMetalG13X`0x00000001d3de4bec (9 samples, 0.07%)</title><rect x="44.7798%" y="517" width="0.0686%" height="15" fill="rgb(214,148,48)" fg:x="5876" fg:w="9"/><text x="45.0298%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture replaceRegion:mipmapLevel:withBytes:bytesPerRow:] (13 samples, 0.10%)</title><rect x="44.7798%" y="581" width="0.0991%" height="15" fill="rgb(232,36,49)" fg:x="5876" fg:w="13"/><text x="45.0298%" y="591.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d921fc (13 samples, 0.10%)</title><rect x="44.7798%" y="565" width="0.0991%" height="15" fill="rgb(209,103,24)" fg:x="5876" fg:w="13"/><text x="45.0298%" y="575.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d92264 (13 samples, 0.10%)</title><rect x="44.7798%" y="549" width="0.0991%" height="15" fill="rgb(229,88,8)" fg:x="5876" fg:w="13"/><text x="45.0298%" y="559.50"></text></g><g><title>AGXMetalG13X`0x00000001d3e7dfac (4 samples, 0.03%)</title><rect x="44.8483%" y="533" width="0.0305%" height="15" fill="rgb(213,181,19)" fg:x="5885" fg:w="4"/><text x="45.0983%" y="543.50"></text></g><g><title>MetalKit`__23-[MTKView __initCommon]_block_invoke (15 samples, 0.11%)</title><rect x="44.7798%" y="629" width="0.1143%" height="15" fill="rgb(254,191,54)" fg:x="5876" fg:w="15"/><text x="45.0298%" y="639.50"></text></g><g><title>MetalKit`-[MTKView draw] (15 samples, 0.11%)</title><rect x="44.7798%" y="613" width="0.1143%" height="15" fill="rgb(241,83,37)" fg:x="5876" fg:w="15"/><text x="45.0298%" y="623.50"></text></g><g><title>cheval`-[WindowViewController drawInMTKView:] (15 samples, 0.11%)</title><rect x="44.7798%" y="597" width="0.1143%" height="15" fill="rgb(233,36,39)" fg:x="5876" fg:w="15"/><text x="45.0298%" y="607.50"></text></g><g><title>MetalKit`-[MTKView currentRenderPassDescriptor] (2 samples, 0.02%)</title><rect x="44.8788%" y="581" width="0.0152%" height="15" fill="rgb(226,3,54)" fg:x="5889" fg:w="2"/><text x="45.1288%" y="591.50"></text></g><g><title>MetalKit`-[MTKView currentDrawable] (2 samples, 0.02%)</title><rect x="44.8788%" y="565" width="0.0152%" height="15" fill="rgb(245,192,40)" fg:x="5889" fg:w="2"/><text x="45.1288%" y="575.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (2 samples, 0.02%)</title><rect x="44.8788%" y="549" width="0.0152%" height="15" fill="rgb(238,167,29)" fg:x="5889" fg:w="2"/><text x="45.1288%" y="559.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (2 samples, 0.02%)</title><rect x="44.8788%" y="533" width="0.0152%" height="15" fill="rgb(232,182,51)" fg:x="5889" fg:w="2"/><text x="45.1288%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (19 samples, 0.14%)</title><rect x="44.7569%" y="709" width="0.1448%" height="15" fill="rgb(231,60,39)" fg:x="5873" fg:w="19"/><text x="45.0069%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (19 samples, 0.14%)</title><rect x="44.7569%" y="693" width="0.1448%" height="15" fill="rgb(208,69,12)" fg:x="5873" fg:w="19"/><text x="45.0069%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (16 samples, 0.12%)</title><rect x="44.7798%" y="677" width="0.1219%" height="15" fill="rgb(235,93,37)" fg:x="5876" fg:w="16"/><text x="45.0298%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (16 samples, 0.12%)</title><rect x="44.7798%" y="661" width="0.1219%" height="15" fill="rgb(213,116,39)" fg:x="5876" fg:w="16"/><text x="45.0298%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (16 samples, 0.12%)</title><rect x="44.7798%" y="645" width="0.1219%" height="15" fill="rgb(222,207,29)" fg:x="5876" fg:w="16"/><text x="45.0298%" y="655.50"></text></g><g><title>AppKit`-[NSVisualEffectView updateLayer] (2 samples, 0.02%)</title><rect x="44.9550%" y="517" width="0.0152%" height="15" fill="rgb(206,96,30)" fg:x="5899" fg:w="2"/><text x="45.2050%" y="527.50"></text></g><g><title>AppKit`-[NSVisualEffectView _updateMaterialLayer] (2 samples, 0.02%)</title><rect x="44.9550%" y="501" width="0.0152%" height="15" fill="rgb(218,138,4)" fg:x="5899" fg:w="2"/><text x="45.2050%" y="511.50"></text></g><g><title>AppKit`makeMaterialLayerWithCoreUIOptions (2 samples, 0.02%)</title><rect x="44.9550%" y="485" width="0.0152%" height="15" fill="rgb(250,191,14)" fg:x="5899" fg:w="2"/><text x="45.2050%" y="495.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (2 samples, 0.02%)</title><rect x="44.9550%" y="469" width="0.0152%" height="15" fill="rgb(239,60,40)" fg:x="5899" fg:w="2"/><text x="45.2050%" y="479.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (2 samples, 0.02%)</title><rect x="44.9550%" y="453" width="0.0152%" height="15" fill="rgb(206,27,48)" fg:x="5899" fg:w="2"/><text x="45.2050%" y="463.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (2 samples, 0.02%)</title><rect x="44.9550%" y="437" width="0.0152%" height="15" fill="rgb(225,35,8)" fg:x="5899" fg:w="2"/><text x="45.2050%" y="447.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (6 samples, 0.05%)</title><rect x="44.9474%" y="597" width="0.0457%" height="15" fill="rgb(250,213,24)" fg:x="5898" fg:w="6"/><text x="45.1974%" y="607.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (6 samples, 0.05%)</title><rect x="44.9474%" y="581" width="0.0457%" height="15" fill="rgb(247,123,22)" fg:x="5898" fg:w="6"/><text x="45.1974%" y="591.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (5 samples, 0.04%)</title><rect x="44.9550%" y="565" width="0.0381%" height="15" fill="rgb(231,138,38)" fg:x="5899" fg:w="5"/><text x="45.2050%" y="575.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (5 samples, 0.04%)</title><rect x="44.9550%" y="549" width="0.0381%" height="15" fill="rgb(231,145,46)" fg:x="5899" fg:w="5"/><text x="45.2050%" y="559.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (5 samples, 0.04%)</title><rect x="44.9550%" y="533" width="0.0381%" height="15" fill="rgb(251,118,11)" fg:x="5899" fg:w="5"/><text x="45.2050%" y="543.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (3 samples, 0.02%)</title><rect x="44.9703%" y="517" width="0.0229%" height="15" fill="rgb(217,147,25)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="527.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (3 samples, 0.02%)</title><rect x="44.9703%" y="501" width="0.0229%" height="15" fill="rgb(247,81,37)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="511.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (3 samples, 0.02%)</title><rect x="44.9703%" y="485" width="0.0229%" height="15" fill="rgb(209,12,38)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="495.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (3 samples, 0.02%)</title><rect x="44.9703%" y="469" width="0.0229%" height="15" fill="rgb(227,1,9)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="479.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.02%)</title><rect x="44.9703%" y="453" width="0.0229%" height="15" fill="rgb(248,47,43)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="463.50"></text></g><g><title>CoreUI`CUIDraw (3 samples, 0.02%)</title><rect x="44.9703%" y="437" width="0.0229%" height="15" fill="rgb(221,10,30)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="447.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (3 samples, 0.02%)</title><rect x="44.9703%" y="421" width="0.0229%" height="15" fill="rgb(210,229,1)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="431.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (3 samples, 0.02%)</title><rect x="44.9703%" y="405" width="0.0229%" height="15" fill="rgb(222,148,37)" fg:x="5901" fg:w="3"/><text x="45.2203%" y="415.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:context:effects:] (2 samples, 0.02%)</title><rect x="44.9779%" y="389" width="0.0152%" height="15" fill="rgb(234,67,33)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="399.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:isFlipped:effects:] (2 samples, 0.02%)</title><rect x="44.9779%" y="373" width="0.0152%" height="15" fill="rgb(247,98,35)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="383.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:rendition:inFrame:context:alpha:operation:isFocused:isFlipped:effects:] (2 samples, 0.02%)</title><rect x="44.9779%" y="357" width="0.0152%" height="15" fill="rgb(247,138,52)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="367.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (2 samples, 0.02%)</title><rect x="44.9779%" y="341" width="0.0152%" height="15" fill="rgb(213,79,30)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="351.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.02%)</title><rect x="44.9779%" y="325" width="0.0152%" height="15" fill="rgb(246,177,23)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="335.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (2 samples, 0.02%)</title><rect x="44.9779%" y="309" width="0.0152%" height="15" fill="rgb(230,62,27)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="319.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (2 samples, 0.02%)</title><rect x="44.9779%" y="293" width="0.0152%" height="15" fill="rgb(216,154,8)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="303.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (2 samples, 0.02%)</title><rect x="44.9779%" y="277" width="0.0152%" height="15" fill="rgb(244,35,45)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="287.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (2 samples, 0.02%)</title><rect x="44.9779%" y="261" width="0.0152%" height="15" fill="rgb(251,115,12)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="271.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (2 samples, 0.02%)</title><rect x="44.9779%" y="245" width="0.0152%" height="15" fill="rgb(240,54,50)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="255.50"></text></g><g><title>CoreGraphics`img_data_lock (2 samples, 0.02%)</title><rect x="44.9779%" y="229" width="0.0152%" height="15" fill="rgb(233,84,52)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="239.50"></text></g><g><title>CoreGraphics`CGAccessSessionCreate (2 samples, 0.02%)</title><rect x="44.9779%" y="213" width="0.0152%" height="15" fill="rgb(207,117,47)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="223.50"></text></g><g><title>CoreGraphics`CGDataProviderRetainData (2 samples, 0.02%)</title><rect x="44.9779%" y="197" width="0.0152%" height="15" fill="rgb(249,43,39)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="207.50"></text></g><g><title>CoreGraphics`provider_for_destination_retain_data (2 samples, 0.02%)</title><rect x="44.9779%" y="181" width="0.0152%" height="15" fill="rgb(209,38,44)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="191.50"></text></g><g><title>CoreGraphics`CGDataProviderRetainData (2 samples, 0.02%)</title><rect x="44.9779%" y="165" width="0.0152%" height="15" fill="rgb(236,212,23)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="175.50"></text></g><g><title>CoreGraphics`imageProvider_retain_data (2 samples, 0.02%)</title><rect x="44.9779%" y="149" width="0.0152%" height="15" fill="rgb(242,79,21)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="159.50"></text></g><g><title>CoreGraphics`subImageProviderCopyImageBlockSet (2 samples, 0.02%)</title><rect x="44.9779%" y="133" width="0.0152%" height="15" fill="rgb(211,96,35)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="143.50"></text></g><g><title>CoreUI`__csiCompressImageProviderCopyImageBlockSetWithOptions (2 samples, 0.02%)</title><rect x="44.9779%" y="117" width="0.0152%" height="15" fill="rgb(253,215,40)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="127.50"></text></g><g><title>CoreUI`-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:] (2 samples, 0.02%)</title><rect x="44.9779%" y="101" width="0.0152%" height="15" fill="rgb(211,81,21)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="111.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_with_attr_f (2 samples, 0.02%)</title><rect x="44.9779%" y="85" width="0.0152%" height="15" fill="rgb(208,190,38)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="95.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke_and_wait (2 samples, 0.02%)</title><rect x="44.9779%" y="69" width="0.0152%" height="15" fill="rgb(235,213,38)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="79.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (2 samples, 0.02%)</title><rect x="44.9779%" y="53" width="0.0152%" height="15" fill="rgb(237,122,38)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="63.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (2 samples, 0.02%)</title><rect x="44.9779%" y="37" width="0.0152%" height="15" fill="rgb(244,218,35)" fg:x="5902" fg:w="2"/><text x="45.2279%" y="47.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (8 samples, 0.06%)</title><rect x="44.9474%" y="613" width="0.0610%" height="15" fill="rgb(240,68,47)" fg:x="5898" fg:w="8"/><text x="45.1974%" y="623.50"></text></g><g><title>QuartzCore`CA::Layer::collect_layers_ (2 samples, 0.02%)</title><rect x="44.9931%" y="597" width="0.0152%" height="15" fill="rgb(210,16,53)" fg:x="5904" fg:w="2"/><text x="45.2431%" y="607.50"></text></g><g><title>QuartzCore`CA::Layer::collect_layers_ (2 samples, 0.02%)</title><rect x="44.9931%" y="581" width="0.0152%" height="15" fill="rgb(235,124,12)" fg:x="5904" fg:w="2"/><text x="45.2431%" y="591.50"></text></g><g><title>QuartzCore`CA::Layer::collect_layers_ (2 samples, 0.02%)</title><rect x="44.9931%" y="565" width="0.0152%" height="15" fill="rgb(224,169,11)" fg:x="5904" fg:w="2"/><text x="45.2431%" y="575.50"></text></g><g><title>QuartzCore`CA::Layer::collect_layers_ (2 samples, 0.02%)</title><rect x="44.9931%" y="549" width="0.0152%" height="15" fill="rgb(250,166,2)" fg:x="5904" fg:w="2"/><text x="45.2431%" y="559.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (12 samples, 0.09%)</title><rect x="44.9322%" y="629" width="0.0914%" height="15" fill="rgb(242,216,29)" fg:x="5896" fg:w="12"/><text x="45.1822%" y="639.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (2 samples, 0.02%)</title><rect x="45.0084%" y="613" width="0.0152%" height="15" fill="rgb(230,116,27)" fg:x="5906" fg:w="2"/><text x="45.2584%" y="623.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (2 samples, 0.02%)</title><rect x="45.0084%" y="597" width="0.0152%" height="15" fill="rgb(228,99,48)" fg:x="5906" fg:w="2"/><text x="45.2584%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.02%)</title><rect x="45.0084%" y="581" width="0.0152%" height="15" fill="rgb(253,11,6)" fg:x="5906" fg:w="2"/><text x="45.2584%" y="591.50"></text></g><g><title>AppKit`-[NSDisplayCyclePhaseCollection orderedPhases] (3 samples, 0.02%)</title><rect x="45.0465%" y="597" width="0.0229%" height="15" fill="rgb(247,143,39)" fg:x="5911" fg:w="3"/><text x="45.2965%" y="607.50"></text></g><g><title>AppKit`-[NSView displayIfNeeded] (2 samples, 0.02%)</title><rect x="45.0922%" y="549" width="0.0152%" height="15" fill="rgb(236,97,10)" fg:x="5917" fg:w="2"/><text x="45.3422%" y="559.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (4 samples, 0.03%)</title><rect x="45.1075%" y="549" width="0.0305%" height="15" fill="rgb(233,208,19)" fg:x="5919" fg:w="4"/><text x="45.3575%" y="559.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (4 samples, 0.03%)</title><rect x="45.1075%" y="533" width="0.0305%" height="15" fill="rgb(216,164,2)" fg:x="5919" fg:w="4"/><text x="45.3575%" y="543.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (4 samples, 0.03%)</title><rect x="45.1075%" y="517" width="0.0305%" height="15" fill="rgb(220,129,5)" fg:x="5919" fg:w="4"/><text x="45.3575%" y="527.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (2 samples, 0.02%)</title><rect x="45.1227%" y="501" width="0.0152%" height="15" fill="rgb(242,17,10)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="511.50"></text></g><g><title>AppKit`-[NSView _updateVibrancy] (2 samples, 0.02%)</title><rect x="45.1227%" y="485" width="0.0152%" height="15" fill="rgb(242,107,0)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="495.50"></text></g><g><title>AppKit`-[NSView _effectiveVibrancyFilter] (2 samples, 0.02%)</title><rect x="45.1227%" y="469" width="0.0152%" height="15" fill="rgb(251,28,31)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="479.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.02%)</title><rect x="45.1227%" y="453" width="0.0152%" height="15" fill="rgb(233,223,10)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="463.50"></text></g><g><title>AppKit`__34-[NSView _effectiveVibrancyFilter]_block_invoke (2 samples, 0.02%)</title><rect x="45.1227%" y="437" width="0.0152%" height="15" fill="rgb(215,21,27)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="447.50"></text></g><g><title>AppKit`-[NSView _vibrancyFilter] (2 samples, 0.02%)</title><rect x="45.1227%" y="421" width="0.0152%" height="15" fill="rgb(232,23,21)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="431.50"></text></g><g><title>AppKit`-[NSControl _vibrancyBlendMode] (2 samples, 0.02%)</title><rect x="45.1227%" y="405" width="0.0152%" height="15" fill="rgb(244,5,23)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="415.50"></text></g><g><title>AppKit`-[NSTextFieldCell _vibrancyBlendModeForControlView:] (2 samples, 0.02%)</title><rect x="45.1227%" y="389" width="0.0152%" height="15" fill="rgb(226,81,46)" fg:x="5921" fg:w="2"/><text x="45.3727%" y="399.50"></text></g><g><title>AppKit`NSWindowUpdateLayerTree (2 samples, 0.02%)</title><rect x="45.1379%" y="549" width="0.0152%" height="15" fill="rgb(247,70,30)" fg:x="5923" fg:w="2"/><text x="45.3879%" y="559.50"></text></g><g><title>AppKit`NSViewPerformBlockWithDescendants (2 samples, 0.02%)</title><rect x="45.1379%" y="533" width="0.0152%" height="15" fill="rgb(212,68,19)" fg:x="5923" fg:w="2"/><text x="45.3879%" y="543.50"></text></g><g><title>AppKit`__NSWindowUpdateLayerTree_block_invoke (2 samples, 0.02%)</title><rect x="45.1379%" y="517" width="0.0152%" height="15" fill="rgb(240,187,13)" fg:x="5923" fg:w="2"/><text x="45.3879%" y="527.50"></text></g><g><title>AppKit`-[NSView _updateLayerGeometryFromView] (2 samples, 0.02%)</title><rect x="45.1379%" y="501" width="0.0152%" height="15" fill="rgb(223,113,26)" fg:x="5923" fg:w="2"/><text x="45.3879%" y="511.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (11 samples, 0.08%)</title><rect x="45.0846%" y="565" width="0.0838%" height="15" fill="rgb(206,192,2)" fg:x="5916" fg:w="11"/><text x="45.3346%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="45.1532%" y="549" width="0.0152%" height="15" fill="rgb(241,108,4)" fg:x="5925" fg:w="2"/><text x="45.4032%" y="559.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (14 samples, 0.11%)</title><rect x="45.0693%" y="581" width="0.1067%" height="15" fill="rgb(247,173,49)" fg:x="5914" fg:w="14"/><text x="45.3193%" y="591.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (18 samples, 0.14%)</title><rect x="45.0465%" y="613" width="0.1372%" height="15" fill="rgb(224,114,35)" fg:x="5911" fg:w="18"/><text x="45.2965%" y="623.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (15 samples, 0.11%)</title><rect x="45.0693%" y="597" width="0.1143%" height="15" fill="rgb(245,159,27)" fg:x="5914" fg:w="15"/><text x="45.3193%" y="607.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (21 samples, 0.16%)</title><rect x="45.0312%" y="629" width="0.1600%" height="15" fill="rgb(245,172,44)" fg:x="5909" fg:w="21"/><text x="45.2812%" y="639.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (36 samples, 0.27%)</title><rect x="44.9246%" y="645" width="0.2743%" height="15" fill="rgb(236,23,11)" fg:x="5895" fg:w="36"/><text x="45.1746%" y="655.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (39 samples, 0.30%)</title><rect x="44.9169%" y="661" width="0.2972%" height="15" fill="rgb(205,117,38)" fg:x="5894" fg:w="39"/><text x="45.1669%" y="671.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (41 samples, 0.31%)</title><rect x="44.9093%" y="709" width="0.3125%" height="15" fill="rgb(237,72,25)" fg:x="5893" fg:w="41"/><text x="45.1593%" y="719.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (41 samples, 0.31%)</title><rect x="44.9093%" y="693" width="0.3125%" height="15" fill="rgb(244,70,9)" fg:x="5893" fg:w="41"/><text x="45.1593%" y="703.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (41 samples, 0.31%)</title><rect x="44.9093%" y="677" width="0.3125%" height="15" fill="rgb(217,125,39)" fg:x="5893" fg:w="41"/><text x="45.1593%" y="687.50"></text></g><g><title>HIToolbox`TSMCopyTextInputGlobalProperty (2 samples, 0.02%)</title><rect x="45.2370%" y="629" width="0.0152%" height="15" fill="rgb(235,36,10)" fg:x="5936" fg:w="2"/><text x="45.4870%" y="639.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (5 samples, 0.04%)</title><rect x="45.2218%" y="709" width="0.0381%" height="15" fill="rgb(251,123,47)" fg:x="5934" fg:w="5"/><text x="45.4718%" y="719.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (5 samples, 0.04%)</title><rect x="45.2218%" y="693" width="0.0381%" height="15" fill="rgb(221,13,13)" fg:x="5934" fg:w="5"/><text x="45.4718%" y="703.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ (3 samples, 0.02%)</title><rect x="45.2370%" y="677" width="0.0229%" height="15" fill="rgb(238,131,9)" fg:x="5936" fg:w="3"/><text x="45.4870%" y="687.50"></text></g><g><title>HIToolbox`CallMyActivateTSMDocument (3 samples, 0.02%)</title><rect x="45.2370%" y="661" width="0.0229%" height="15" fill="rgb(211,50,8)" fg:x="5936" fg:w="3"/><text x="45.4870%" y="671.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (3 samples, 0.02%)</title><rect x="45.2370%" y="645" width="0.0229%" height="15" fill="rgb(245,182,24)" fg:x="5936" fg:w="3"/><text x="45.4870%" y="655.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (68 samples, 0.52%)</title><rect x="44.7569%" y="725" width="0.5182%" height="15" fill="rgb(242,14,37)" fg:x="5873" fg:w="68"/><text x="45.0069%" y="735.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (77 samples, 0.59%)</title><rect x="44.7036%" y="741" width="0.5868%" height="15" fill="rgb(246,228,12)" fg:x="5866" fg:w="77"/><text x="44.9536%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (2 samples, 0.02%)</title><rect x="45.2751%" y="725" width="0.0152%" height="15" fill="rgb(213,55,15)" fg:x="5941" fg:w="2"/><text x="45.5251%" y="735.50"></text></g><g><title>AppKit`_DPSNextEvent (86 samples, 0.66%)</title><rect x="44.6578%" y="805" width="0.6554%" height="15" fill="rgb(209,9,3)" fg:x="5860" fg:w="86"/><text x="44.9078%" y="815.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (85 samples, 0.65%)</title><rect x="44.6654%" y="789" width="0.6478%" height="15" fill="rgb(230,59,30)" fg:x="5861" fg:w="85"/><text x="44.9154%" y="799.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (85 samples, 0.65%)</title><rect x="44.6654%" y="773" width="0.6478%" height="15" fill="rgb(209,121,21)" fg:x="5861" fg:w="85"/><text x="44.9154%" y="783.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (80 samples, 0.61%)</title><rect x="44.7036%" y="757" width="0.6097%" height="15" fill="rgb(220,109,13)" fg:x="5866" fg:w="80"/><text x="44.9536%" y="767.50"></text></g><g><title>cheval`generic_update (87 samples, 0.66%)</title><rect x="44.6578%" y="837" width="0.6630%" height="15" fill="rgb(232,18,1)" fg:x="5860" fg:w="87"/><text x="44.9078%" y="847.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (87 samples, 0.66%)</title><rect x="44.6578%" y="821" width="0.6630%" height="15" fill="rgb(215,41,42)" fg:x="5860" fg:w="87"/><text x="44.9078%" y="831.50"></text></g><g><title>cheval`minifb::os::macos::Window::update_with_buffer_stride (89 samples, 0.68%)</title><rect x="44.6502%" y="869" width="0.6783%" height="15" fill="rgb(224,123,36)" fg:x="5859" fg:w="89"/><text x="44.9002%" y="879.50"></text></g><g><title>cheval`mfb_update_with_buffer (89 samples, 0.68%)</title><rect x="44.6502%" y="853" width="0.6783%" height="15" fill="rgb(240,125,3)" fg:x="5859" fg:w="89"/><text x="44.9002%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (3 samples, 0.02%)</title><rect x="45.3437%" y="821" width="0.0229%" height="15" fill="rgb(205,98,50)" fg:x="5950" fg:w="3"/><text x="45.5937%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.02%)</title><rect x="45.3437%" y="805" width="0.0229%" height="15" fill="rgb(205,185,37)" fg:x="5950" fg:w="3"/><text x="45.5937%" y="815.50"></text></g><g><title>libsystem_c.dylib`nanosleep (5 samples, 0.04%)</title><rect x="45.3361%" y="837" width="0.0381%" height="15" fill="rgb(238,207,15)" fg:x="5949" fg:w="5"/><text x="45.5861%" y="847.50"></text></g><g><title>cheval`minifb::rate::UpdateRate::update (14 samples, 0.11%)</title><rect x="45.3285%" y="869" width="0.1067%" height="15" fill="rgb(213,199,42)" fg:x="5948" fg:w="14"/><text x="45.5785%" y="879.50"></text></g><g><title>cheval`std::thread::sleep (14 samples, 0.11%)</title><rect x="45.3285%" y="853" width="0.1067%" height="15" fill="rgb(235,201,11)" fg:x="5948" fg:w="14"/><text x="45.5785%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (8 samples, 0.06%)</title><rect x="45.3742%" y="837" width="0.0610%" height="15" fill="rgb(207,46,11)" fg:x="5954" fg:w="8"/><text x="45.6242%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (380 samples, 2.90%)</title><rect x="45.4351%" y="869" width="2.8959%" height="15" fill="rgb(241,35,35)" fg:x="5962" fg:w="380"/><text x="45.6851%" y="879.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (380 samples, 2.90%)</title><rect x="45.4351%" y="853" width="2.8959%" height="15" fill="rgb(243,32,47)" fg:x="5962" fg:w="380"/><text x="45.6851%" y="863.50">li..</text></g><g><title>libsystem_platform.dylib`__bzero (379 samples, 2.89%)</title><rect x="45.4428%" y="837" width="2.8883%" height="15" fill="rgb(247,202,23)" fg:x="5963" fg:w="379"/><text x="45.6928%" y="847.50">li..</text></g><g><title>libsystem_kernel.dylib`madvise (26 samples, 0.20%)</title><rect x="48.3310%" y="853" width="0.1981%" height="15" fill="rgb(219,102,11)" fg:x="6342" fg:w="26"/><text x="48.5810%" y="863.50"></text></g><g><title>cheval`&lt;cheval::window::window_minifb::WindowMinifb as cheval::window::Window&gt;::next_frame (6,369 samples, 48.54%)</title><rect x="0.0000%" y="885" width="48.5368%" height="15" fill="rgb(243,110,44)" fg:x="0" fg:w="6369"/><text x="0.2500%" y="895.50">cheval`&lt;cheval::window::window_minifb::WindowMinifb as cheval::window::Window&gt;::..</text></g><g><title>libsystem_malloc.dylib`free_medium (27 samples, 0.21%)</title><rect x="48.3310%" y="869" width="0.2058%" height="15" fill="rgb(222,74,54)" fg:x="6342" fg:w="27"/><text x="48.5810%" y="879.50"></text></g><g><title>cheval`cheval::cheval::Cheval::render (6,363 samples, 48.49%)</title><rect x="48.5597%" y="885" width="48.4911%" height="15" fill="rgb(216,99,12)" fg:x="6372" fg:w="6363"/><text x="48.8097%" y="895.50">cheval`cheval::cheval::Cheval::render</text></g><g><title>cheval`&lt;cheval::block_element::BlockElement as cheval::element::Element&gt;::render (6,363 samples, 48.49%)</title><rect x="48.5597%" y="869" width="48.4911%" height="15" fill="rgb(226,22,26)" fg:x="6372" fg:w="6363"/><text x="48.8097%" y="879.50">cheval`&lt;cheval::block_element::BlockElement as cheval::element::Element&gt;::render</text></g><g><title>cheval`cheval::render_buffer::RenderBuffer::for_pixel_in_block (6,363 samples, 48.49%)</title><rect x="48.5597%" y="853" width="48.4911%" height="15" fill="rgb(217,163,10)" fg:x="6372" fg:w="6363"/><text x="48.8097%" y="863.50">cheval`cheval::render_buffer::RenderBuffer::for_pixel_in_block</text></g><g><title>cheval`cheval::bakedexpression::BakedExpression::bake_u32_or (5 samples, 0.04%)</title><rect x="97.0660%" y="837" width="0.0381%" height="15" fill="rgb(213,25,53)" fg:x="12737" fg:w="5"/><text x="97.3160%" y="847.50"></text></g><g><title>cheval`expresso::expression::Expression::run (4 samples, 0.03%)</title><rect x="97.0736%" y="821" width="0.0305%" height="15" fill="rgb(252,105,26)" fg:x="12738" fg:w="4"/><text x="97.3236%" y="831.50"></text></g><g><title>cheval`cheval::page::Page::update (6 samples, 0.05%)</title><rect x="97.0660%" y="869" width="0.0457%" height="15" fill="rgb(220,39,43)" fg:x="12737" fg:w="6"/><text x="97.3160%" y="879.50"></text></g><g><title>cheval`&lt;cheval::block_element::BlockElement as cheval::element::Element&gt;::update (6 samples, 0.05%)</title><rect x="97.0660%" y="853" width="0.0457%" height="15" fill="rgb(229,68,48)" fg:x="12737" fg:w="6"/><text x="97.3160%" y="863.50"></text></g><g><title>cheval`cheval::cheval::Cheval::update (9 samples, 0.07%)</title><rect x="97.0508%" y="885" width="0.0686%" height="15" fill="rgb(252,8,32)" fg:x="12735" fg:w="9"/><text x="97.3008%" y="895.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (2 samples, 0.02%)</title><rect x="97.1422%" y="757" width="0.0152%" height="15" fill="rgb(223,20,43)" fg:x="12747" fg:w="2"/><text x="97.3922%" y="767.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (2 samples, 0.02%)</title><rect x="97.1422%" y="741" width="0.0152%" height="15" fill="rgb(229,81,49)" fg:x="12747" fg:w="2"/><text x="97.3922%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="97.1422%" y="725" width="0.0152%" height="15" fill="rgb(236,28,36)" fg:x="12747" fg:w="2"/><text x="97.3922%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="97.1422%" y="709" width="0.0152%" height="15" fill="rgb(249,185,26)" fg:x="12747" fg:w="2"/><text x="97.3922%" y="719.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (2 samples, 0.02%)</title><rect x="97.1422%" y="693" width="0.0152%" height="15" fill="rgb(249,174,33)" fg:x="12747" fg:w="2"/><text x="97.3922%" y="703.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (2 samples, 0.02%)</title><rect x="97.1422%" y="677" width="0.0152%" height="15" fill="rgb(233,201,37)" fg:x="12747" fg:w="2"/><text x="97.3922%" y="687.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (2 samples, 0.02%)</title><rect x="97.1574%" y="693" width="0.0152%" height="15" fill="rgb(221,78,26)" fg:x="12749" fg:w="2"/><text x="97.4074%" y="703.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (3 samples, 0.02%)</title><rect x="97.1574%" y="757" width="0.0229%" height="15" fill="rgb(250,127,30)" fg:x="12749" fg:w="3"/><text x="97.4074%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.02%)</title><rect x="97.1574%" y="741" width="0.0229%" height="15" fill="rgb(230,49,44)" fg:x="12749" fg:w="3"/><text x="97.4074%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="97.1574%" y="725" width="0.0229%" height="15" fill="rgb(229,67,23)" fg:x="12749" fg:w="3"/><text x="97.4074%" y="735.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (3 samples, 0.02%)</title><rect x="97.1574%" y="709" width="0.0229%" height="15" fill="rgb(249,83,47)" fg:x="12749" fg:w="3"/><text x="97.4074%" y="719.50"></text></g><g><title>HIToolbox`IsMenuBarVisible (3 samples, 0.02%)</title><rect x="97.1803%" y="741" width="0.0229%" height="15" fill="rgb(215,43,3)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="751.50"></text></g><g><title>HIToolbox`GetUserSpaceMenuBar() (3 samples, 0.02%)</title><rect x="97.1803%" y="725" width="0.0229%" height="15" fill="rgb(238,154,13)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="735.50"></text></g><g><title>HIToolbox`MenuBarInstance::MenuBarInstance (3 samples, 0.02%)</title><rect x="97.1803%" y="709" width="0.0229%" height="15" fill="rgb(219,56,2)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="719.50"></text></g><g><title>HIToolbox`MBWindows::Get (3 samples, 0.02%)</title><rect x="97.1803%" y="693" width="0.0229%" height="15" fill="rgb(233,0,4)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="703.50"></text></g><g><title>HIToolbox`MBWindows::MBWindows (3 samples, 0.02%)</title><rect x="97.1803%" y="677" width="0.0229%" height="15" fill="rgb(235,30,7)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="687.50"></text></g><g><title>HIToolbox`RegisterForDisplayConfigChangeNotificationsIfNecessary (3 samples, 0.02%)</title><rect x="97.1803%" y="661" width="0.0229%" height="15" fill="rgb(250,79,13)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="671.50"></text></g><g><title>HIToolbox`RegisterCallbackInternal(unsigned int, void (*)(unsigned int, void*, void*), unsigned int, void*, unsigned int) (3 samples, 0.02%)</title><rect x="97.1803%" y="645" width="0.0229%" height="15" fill="rgb(211,146,34)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="655.50"></text></g><g><title>SkyLight`SLSMainConnectionID (3 samples, 0.02%)</title><rect x="97.1803%" y="629" width="0.0229%" height="15" fill="rgb(228,22,38)" fg:x="12752" fg:w="3"/><text x="97.4303%" y="639.50"></text></g><g><title>SkyLight`SLSNewConnection (2 samples, 0.02%)</title><rect x="97.1879%" y="613" width="0.0152%" height="15" fill="rgb(235,168,5)" fg:x="12753" fg:w="2"/><text x="97.4379%" y="623.50"></text></g><g><title>AppKit`_NSInitializeAppContext (5 samples, 0.04%)</title><rect x="97.1803%" y="757" width="0.0381%" height="15" fill="rgb(221,155,16)" fg:x="12752" fg:w="5"/><text x="97.4303%" y="767.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (2 samples, 0.02%)</title><rect x="97.2032%" y="741" width="0.0152%" height="15" fill="rgb(215,215,53)" fg:x="12755" fg:w="2"/><text x="97.4532%" y="751.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (2 samples, 0.02%)</title><rect x="97.2032%" y="725" width="0.0152%" height="15" fill="rgb(223,4,10)" fg:x="12755" fg:w="2"/><text x="97.4532%" y="735.50"></text></g><g><title>HIServices`GetCurrentProcess (2 samples, 0.02%)</title><rect x="97.2032%" y="709" width="0.0152%" height="15" fill="rgb(234,103,6)" fg:x="12755" fg:w="2"/><text x="97.4532%" y="719.50"></text></g><g><title>HIServices`_RegisterApplication (2 samples, 0.02%)</title><rect x="97.2032%" y="693" width="0.0152%" height="15" fill="rgb(227,97,0)" fg:x="12755" fg:w="2"/><text x="97.4532%" y="703.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (11 samples, 0.08%)</title><rect x="97.1422%" y="789" width="0.0838%" height="15" fill="rgb(234,150,53)" fg:x="12747" fg:w="11"/><text x="97.3922%" y="799.50"></text></g><g><title>AppKit`-[NSApplication init] (11 samples, 0.08%)</title><rect x="97.1422%" y="773" width="0.0838%" height="15" fill="rgb(228,201,54)" fg:x="12747" fg:w="11"/><text x="97.3922%" y="783.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawTextTitle (2 samples, 0.02%)</title><rect x="97.2337%" y="421" width="0.0152%" height="15" fill="rgb(222,22,37)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="431.50"></text></g><g><title>HIToolbox`HIThemeDrawTextBox (2 samples, 0.02%)</title><rect x="97.2337%" y="405" width="0.0152%" height="15" fill="rgb(237,53,32)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="415.50"></text></g><g><title>HIToolbox`DataEngine::DrawTextBox (2 samples, 0.02%)</title><rect x="97.2337%" y="389" width="0.0152%" height="15" fill="rgb(233,25,53)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="399.50"></text></g><g><title>HIToolbox`invocation function for block in DataEngine::DrawTextBox (2 samples, 0.02%)</title><rect x="97.2337%" y="373" width="0.0152%" height="15" fill="rgb(210,40,34)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="383.50"></text></g><g><title>HIToolbox`TCoreTextEngine::DrawThemeTextBox (2 samples, 0.02%)</title><rect x="97.2337%" y="357" width="0.0152%" height="15" fill="rgb(241,220,44)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="367.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawStyledGlyphsAtPositions (2 samples, 0.02%)</title><rect x="97.2337%" y="341" width="0.0152%" height="15" fill="rgb(235,28,35)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="351.50"></text></g><g><title>CoreUI`CUIDrawStyledGlyphsAtPositions (2 samples, 0.02%)</title><rect x="97.2337%" y="325" width="0.0152%" height="15" fill="rgb(210,56,17)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="335.50"></text></g><g><title>CoreUI`CUIRenderer::DrawStyledGlyphsAtPositions (2 samples, 0.02%)</title><rect x="97.2337%" y="309" width="0.0152%" height="15" fill="rgb(224,130,29)" fg:x="12759" fg:w="2"/><text x="97.4837%" y="319.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (5 samples, 0.04%)</title><rect x="97.2260%" y="453" width="0.0381%" height="15" fill="rgb(235,212,8)" fg:x="12758" fg:w="5"/><text x="97.4760%" y="463.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (5 samples, 0.04%)</title><rect x="97.2260%" y="437" width="0.0381%" height="15" fill="rgb(223,33,50)" fg:x="12758" fg:w="5"/><text x="97.4760%" y="447.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (2 samples, 0.02%)</title><rect x="97.2489%" y="421" width="0.0152%" height="15" fill="rgb(219,149,13)" fg:x="12761" fg:w="2"/><text x="97.4989%" y="431.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (6 samples, 0.05%)</title><rect x="97.2260%" y="789" width="0.0457%" height="15" fill="rgb(250,156,29)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="799.50"></text></g><g><title>HIToolbox`SetSystemUIMode (6 samples, 0.05%)</title><rect x="97.2260%" y="773" width="0.0457%" height="15" fill="rgb(216,193,19)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="783.50"></text></g><g><title>HIToolbox`UpdateAllAggregateUIModes(MenuBarAnimationStyle, unsigned char) (6 samples, 0.05%)</title><rect x="97.2260%" y="757" width="0.0457%" height="15" fill="rgb(216,135,14)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="767.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachMenuBarDo(void  (6 samples, 0.05%)</title><rect x="97.2260%" y="741" width="0.0457%" height="15" fill="rgb(241,47,5)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="751.50"></text></g><g><title>HIToolbox`MenuBarInstance::UpdateAggregateUIMode (6 samples, 0.05%)</title><rect x="97.2260%" y="725" width="0.0457%" height="15" fill="rgb(233,42,35)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="735.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (6 samples, 0.05%)</title><rect x="97.2260%" y="709" width="0.0457%" height="15" fill="rgb(231,13,6)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="719.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (6 samples, 0.05%)</title><rect x="97.2260%" y="693" width="0.0457%" height="15" fill="rgb(207,181,40)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="703.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (6 samples, 0.05%)</title><rect x="97.2260%" y="677" width="0.0457%" height="15" fill="rgb(254,173,49)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="687.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (6 samples, 0.05%)</title><rect x="97.2260%" y="661" width="0.0457%" height="15" fill="rgb(221,1,38)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="671.50"></text></g><g><title>HIToolbox`ShowHide (6 samples, 0.05%)</title><rect x="97.2260%" y="645" width="0.0457%" height="15" fill="rgb(206,124,46)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="655.50"></text></g><g><title>HIToolbox`_ShowHideWindows (6 samples, 0.05%)</title><rect x="97.2260%" y="629" width="0.0457%" height="15" fill="rgb(249,21,11)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="639.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (6 samples, 0.05%)</title><rect x="97.2260%" y="613" width="0.0457%" height="15" fill="rgb(222,201,40)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="623.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (6 samples, 0.05%)</title><rect x="97.2260%" y="597" width="0.0457%" height="15" fill="rgb(235,61,29)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="607.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.05%)</title><rect x="97.2260%" y="581" width="0.0457%" height="15" fill="rgb(219,207,3)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="591.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (6 samples, 0.05%)</title><rect x="97.2260%" y="565" width="0.0457%" height="15" fill="rgb(222,56,46)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="575.50"></text></g><g><title>HIToolbox`HIView::SendDraw (6 samples, 0.05%)</title><rect x="97.2260%" y="549" width="0.0457%" height="15" fill="rgb(239,76,54)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="559.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (6 samples, 0.05%)</title><rect x="97.2260%" y="533" width="0.0457%" height="15" fill="rgb(231,124,27)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="543.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (6 samples, 0.05%)</title><rect x="97.2260%" y="517" width="0.0457%" height="15" fill="rgb(249,195,6)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="527.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (6 samples, 0.05%)</title><rect x="97.2260%" y="501" width="0.0457%" height="15" fill="rgb(237,174,47)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="511.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (6 samples, 0.05%)</title><rect x="97.2260%" y="485" width="0.0457%" height="15" fill="rgb(206,201,31)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="495.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (6 samples, 0.05%)</title><rect x="97.2260%" y="469" width="0.0457%" height="15" fill="rgb(231,57,52)" fg:x="12758" fg:w="6"/><text x="97.4760%" y="479.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistryImp::RendezvousWithServer (2 samples, 0.02%)</title><rect x="97.3022%" y="229" width="0.0152%" height="15" fill="rgb(248,177,22)" fg:x="12768" fg:w="2"/><text x="97.5522%" y="239.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (3 samples, 0.02%)</title><rect x="97.3022%" y="565" width="0.0229%" height="15" fill="rgb(215,211,37)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="575.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (3 samples, 0.02%)</title><rect x="97.3022%" y="549" width="0.0229%" height="15" fill="rgb(241,128,51)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="559.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (3 samples, 0.02%)</title><rect x="97.3022%" y="533" width="0.0229%" height="15" fill="rgb(227,165,31)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="543.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (3 samples, 0.02%)</title><rect x="97.3022%" y="517" width="0.0229%" height="15" fill="rgb(228,167,24)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="527.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (3 samples, 0.02%)</title><rect x="97.3022%" y="501" width="0.0229%" height="15" fill="rgb(228,143,12)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="511.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (3 samples, 0.02%)</title><rect x="97.3022%" y="485" width="0.0229%" height="15" fill="rgb(249,149,8)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="495.50"></text></g><g><title>Foundation`probeGC (3 samples, 0.02%)</title><rect x="97.3022%" y="469" width="0.0229%" height="15" fill="rgb(243,35,44)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="479.50"></text></g><g><title>CoreText`TDescriptor::Hash (3 samples, 0.02%)</title><rect x="97.3022%" y="453" width="0.0229%" height="15" fill="rgb(246,89,9)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="463.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (3 samples, 0.02%)</title><rect x="97.3022%" y="437" width="0.0229%" height="15" fill="rgb(233,213,13)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="447.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (3 samples, 0.02%)</title><rect x="97.3022%" y="421" width="0.0229%" height="15" fill="rgb(233,141,41)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="431.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (3 samples, 0.02%)</title><rect x="97.3022%" y="405" width="0.0229%" height="15" fill="rgb(239,167,4)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="415.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (3 samples, 0.02%)</title><rect x="97.3022%" y="389" width="0.0229%" height="15" fill="rgb(209,217,16)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="399.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (3 samples, 0.02%)</title><rect x="97.3022%" y="373" width="0.0229%" height="15" fill="rgb(219,88,35)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="383.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (3 samples, 0.02%)</title><rect x="97.3022%" y="357" width="0.0229%" height="15" fill="rgb(220,193,23)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="367.50"></text></g><g><title>CoreText`TDescriptorSource::CopyXTypeFontWithName (3 samples, 0.02%)</title><rect x="97.3022%" y="341" width="0.0229%" height="15" fill="rgb(230,90,52)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="351.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontWithName (3 samples, 0.02%)</title><rect x="97.3022%" y="325" width="0.0229%" height="15" fill="rgb(252,106,19)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="335.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::TGlobalFontRegistry (3 samples, 0.02%)</title><rect x="97.3022%" y="309" width="0.0229%" height="15" fill="rgb(206,74,20)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (3 samples, 0.02%)</title><rect x="97.3022%" y="293" width="0.0229%" height="15" fill="rgb(230,138,44)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (3 samples, 0.02%)</title><rect x="97.3022%" y="277" width="0.0229%" height="15" fill="rgb(235,182,43)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (3 samples, 0.02%)</title><rect x="97.3022%" y="261" width="0.0229%" height="15" fill="rgb(242,16,51)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="271.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::CreateRegistry (3 samples, 0.02%)</title><rect x="97.3022%" y="245" width="0.0229%" height="15" fill="rgb(248,9,4)" fg:x="12768" fg:w="3"/><text x="97.5522%" y="255.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (5 samples, 0.04%)</title><rect x="97.3022%" y="613" width="0.0381%" height="15" fill="rgb(210,31,22)" fg:x="12768" fg:w="5"/><text x="97.5522%" y="623.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (5 samples, 0.04%)</title><rect x="97.3022%" y="597" width="0.0381%" height="15" fill="rgb(239,54,39)" fg:x="12768" fg:w="5"/><text x="97.5522%" y="607.50"></text></g><g><title>AppKit`-[NSButtonCell init] (5 samples, 0.04%)</title><rect x="97.3022%" y="581" width="0.0381%" height="15" fill="rgb(230,99,41)" fg:x="12768" fg:w="5"/><text x="97.5522%" y="591.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (7 samples, 0.05%)</title><rect x="97.2946%" y="709" width="0.0533%" height="15" fill="rgb(253,106,12)" fg:x="12767" fg:w="7"/><text x="97.5446%" y="719.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (7 samples, 0.05%)</title><rect x="97.2946%" y="693" width="0.0533%" height="15" fill="rgb(213,46,41)" fg:x="12767" fg:w="7"/><text x="97.5446%" y="703.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.05%)</title><rect x="97.2946%" y="677" width="0.0533%" height="15" fill="rgb(215,133,35)" fg:x="12767" fg:w="7"/><text x="97.5446%" y="687.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (6 samples, 0.05%)</title><rect x="97.3022%" y="661" width="0.0457%" height="15" fill="rgb(213,28,5)" fg:x="12768" fg:w="6"/><text x="97.5522%" y="671.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (6 samples, 0.05%)</title><rect x="97.3022%" y="645" width="0.0457%" height="15" fill="rgb(215,77,49)" fg:x="12768" fg:w="6"/><text x="97.5522%" y="655.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (6 samples, 0.05%)</title><rect x="97.3022%" y="629" width="0.0457%" height="15" fill="rgb(248,100,22)" fg:x="12768" fg:w="6"/><text x="97.5522%" y="639.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (8 samples, 0.06%)</title><rect x="97.2946%" y="725" width="0.0610%" height="15" fill="rgb(208,67,9)" fg:x="12767" fg:w="8"/><text x="97.5446%" y="735.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (13 samples, 0.10%)</title><rect x="97.2946%" y="741" width="0.0991%" height="15" fill="rgb(219,133,21)" fg:x="12767" fg:w="13"/><text x="97.5446%" y="751.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (5 samples, 0.04%)</title><rect x="97.3556%" y="725" width="0.0381%" height="15" fill="rgb(246,46,29)" fg:x="12775" fg:w="5"/><text x="97.6056%" y="735.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (5 samples, 0.04%)</title><rect x="97.3556%" y="709" width="0.0381%" height="15" fill="rgb(246,185,52)" fg:x="12775" fg:w="5"/><text x="97.6056%" y="719.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (5 samples, 0.04%)</title><rect x="97.3556%" y="693" width="0.0381%" height="15" fill="rgb(252,136,11)" fg:x="12775" fg:w="5"/><text x="97.6056%" y="703.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView setAssociatedThemeFrame:] (2 samples, 0.02%)</title><rect x="97.3784%" y="677" width="0.0152%" height="15" fill="rgb(219,138,53)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="687.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (2 samples, 0.02%)</title><rect x="97.3784%" y="661" width="0.0152%" height="15" fill="rgb(211,51,23)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="671.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (2 samples, 0.02%)</title><rect x="97.3784%" y="645" width="0.0152%" height="15" fill="rgb(247,221,28)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="655.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (2 samples, 0.02%)</title><rect x="97.3784%" y="629" width="0.0152%" height="15" fill="rgb(251,222,45)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="639.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView observeValueForKeyPath:ofObject:change:context:] (2 samples, 0.02%)</title><rect x="97.3784%" y="613" width="0.0152%" height="15" fill="rgb(217,162,53)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="623.50"></text></g><g><title>AppKit`-[NSThemeFrame _cuiMakeOrUpdateBackgroundLayer:topHeight:drawTopSeparator:bottomHeight:forTitlebar:] (2 samples, 0.02%)</title><rect x="97.3784%" y="597" width="0.0152%" height="15" fill="rgb(229,93,14)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="607.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (2 samples, 0.02%)</title><rect x="97.3784%" y="581" width="0.0152%" height="15" fill="rgb(209,67,49)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="591.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (2 samples, 0.02%)</title><rect x="97.3784%" y="565" width="0.0152%" height="15" fill="rgb(213,87,29)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="575.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (2 samples, 0.02%)</title><rect x="97.3784%" y="549" width="0.0152%" height="15" fill="rgb(205,151,52)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="559.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateLayer (2 samples, 0.02%)</title><rect x="97.3784%" y="533" width="0.0152%" height="15" fill="rgb(253,215,39)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="543.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::MakeOrUpdateWindowFrameLayerNew (2 samples, 0.02%)</title><rect x="97.3784%" y="517" width="0.0152%" height="15" fill="rgb(221,220,41)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="527.50"></text></g><g><title>CoreUI`-[CUIThemeFacet updateLayer:effects:] (2 samples, 0.02%)</title><rect x="97.3784%" y="501" width="0.0152%" height="15" fill="rgb(218,133,21)" fg:x="12778" fg:w="2"/><text x="97.6284%" y="511.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (15 samples, 0.11%)</title><rect x="97.2946%" y="757" width="0.1143%" height="15" fill="rgb(221,193,43)" fg:x="12767" fg:w="15"/><text x="97.5446%" y="767.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (2 samples, 0.02%)</title><rect x="97.3937%" y="741" width="0.0152%" height="15" fill="rgb(240,128,52)" fg:x="12780" fg:w="2"/><text x="97.6437%" y="751.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (17 samples, 0.13%)</title><rect x="97.2870%" y="789" width="0.1296%" height="15" fill="rgb(253,114,12)" fg:x="12766" fg:w="17"/><text x="97.5370%" y="799.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (17 samples, 0.13%)</title><rect x="97.2870%" y="773" width="0.1296%" height="15" fill="rgb(215,223,47)" fg:x="12766" fg:w="17"/><text x="97.5370%" y="783.50"></text></g><g><title>Metal`MTLCreateSystemDefaultDevice (2 samples, 0.02%)</title><rect x="97.4166%" y="789" width="0.0152%" height="15" fill="rgb(248,225,23)" fg:x="12783" fg:w="2"/><text x="97.6666%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="97.4166%" y="773" width="0.0152%" height="15" fill="rgb(250,108,0)" fg:x="12783" fg:w="2"/><text x="97.6666%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="97.4166%" y="757" width="0.0152%" height="15" fill="rgb(228,208,7)" fg:x="12783" fg:w="2"/><text x="97.6666%" y="767.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (2 samples, 0.02%)</title><rect x="97.4166%" y="741" width="0.0152%" height="15" fill="rgb(244,45,10)" fg:x="12783" fg:w="2"/><text x="97.6666%" y="751.50"></text></g><g><title>cheval`minifb::Window::new (42 samples, 0.32%)</title><rect x="97.1270%" y="837" width="0.3201%" height="15" fill="rgb(207,125,25)" fg:x="12745" fg:w="42"/><text x="97.3770%" y="847.50"></text></g><g><title>cheval`minifb::os::macos::Window::new (42 samples, 0.32%)</title><rect x="97.1270%" y="821" width="0.3201%" height="15" fill="rgb(210,195,18)" fg:x="12745" fg:w="42"/><text x="97.3770%" y="831.50"></text></g><g><title>cheval`mfb_open (42 samples, 0.32%)</title><rect x="97.1270%" y="805" width="0.3201%" height="15" fill="rgb(249,80,12)" fg:x="12745" fg:w="42"/><text x="97.3770%" y="815.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (2 samples, 0.02%)</title><rect x="97.4318%" y="789" width="0.0152%" height="15" fill="rgb(221,65,9)" fg:x="12785" fg:w="2"/><text x="97.6818%" y="799.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (2 samples, 0.02%)</title><rect x="97.4318%" y="773" width="0.0152%" height="15" fill="rgb(235,49,36)" fg:x="12785" fg:w="2"/><text x="97.6818%" y="783.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (2 samples, 0.02%)</title><rect x="97.4318%" y="757" width="0.0152%" height="15" fill="rgb(225,32,20)" fg:x="12785" fg:w="2"/><text x="97.6818%" y="767.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.02%)</title><rect x="97.4318%" y="741" width="0.0152%" height="15" fill="rgb(215,141,46)" fg:x="12785" fg:w="2"/><text x="97.6818%" y="751.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (2 samples, 0.02%)</title><rect x="97.4318%" y="725" width="0.0152%" height="15" fill="rgb(250,160,47)" fg:x="12785" fg:w="2"/><text x="97.6818%" y="735.50"></text></g><g><title>AppKit`+[NSApplication initialize] (2 samples, 0.02%)</title><rect x="97.4318%" y="709" width="0.0152%" height="15" fill="rgb(216,222,40)" fg:x="12785" fg:w="2"/><text x="97.6818%" y="719.50"></text></g><g><title>cheval`cheval::window::WindowFactory::create (44 samples, 0.34%)</title><rect x="97.1193%" y="885" width="0.3353%" height="15" fill="rgb(234,217,39)" fg:x="12744" fg:w="44"/><text x="97.3693%" y="895.50"></text></g><g><title>cheval`cheval::window::window_minifb::WindowMinifb::new (44 samples, 0.34%)</title><rect x="97.1193%" y="869" width="0.3353%" height="15" fill="rgb(207,178,40)" fg:x="12744" fg:w="44"/><text x="97.3693%" y="879.50"></text></g><g><title>cheval`cheval::window::window_minifb::WindowWithFrame::new (43 samples, 0.33%)</title><rect x="97.1270%" y="853" width="0.3277%" height="15" fill="rgb(221,136,13)" fg:x="12745" fg:w="43"/><text x="97.3770%" y="863.50"></text></g><g><title>cheval`core::ptr::drop_in_place&lt;cheval::window::window_minifb::WindowMinifb&gt; (2 samples, 0.02%)</title><rect x="97.4623%" y="885" width="0.0152%" height="15" fill="rgb(249,199,10)" fg:x="12789" fg:w="2"/><text x="97.7123%" y="895.50"></text></g><g><title>cheval`core::ptr::drop_in_place&lt;minifb::Window&gt; (2 samples, 0.02%)</title><rect x="97.4623%" y="869" width="0.0152%" height="15" fill="rgb(249,222,13)" fg:x="12789" fg:w="2"/><text x="97.7123%" y="879.50"></text></g><g><title>cheval`mfb_close (2 samples, 0.02%)</title><rect x="97.4623%" y="853" width="0.0152%" height="15" fill="rgb(244,185,38)" fg:x="12789" fg:w="2"/><text x="97.7123%" y="863.50"></text></g><g><title>AppKit`-[NSWindow _close] (2 samples, 0.02%)</title><rect x="97.4623%" y="837" width="0.0152%" height="15" fill="rgb(236,202,9)" fg:x="12789" fg:w="2"/><text x="97.7123%" y="847.50"></text></g><g><title>AppKit`-[NSWindow _finishClosingWindow] (2 samples, 0.02%)</title><rect x="97.4623%" y="821" width="0.0152%" height="15" fill="rgb(250,229,37)" fg:x="12789" fg:w="2"/><text x="97.7123%" y="831.50"></text></g><g><title>cheval`std::io::stdio::_eprint (2 samples, 0.02%)</title><rect x="97.4851%" y="885" width="0.0152%" height="15" fill="rgb(206,174,23)" fg:x="12792" fg:w="2"/><text x="97.7351%" y="895.50"></text></g><g><title>cheval`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (2 samples, 0.02%)</title><rect x="97.4851%" y="869" width="0.0152%" height="15" fill="rgb(211,33,43)" fg:x="12792" fg:w="2"/><text x="97.7351%" y="879.50"></text></g><g><title>cheval`core::fmt::write (2 samples, 0.02%)</title><rect x="97.4851%" y="853" width="0.0152%" height="15" fill="rgb(245,58,50)" fg:x="12792" fg:w="2"/><text x="97.7351%" y="863.50"></text></g><g><title>cheval`main (12,842 samples, 97.87%)</title><rect x="0.0000%" y="1077" width="97.8662%" height="15" fill="rgb(244,68,36)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="1087.50">cheval`main</text></g><g><title>cheval`std::rt::lang_start_internal (12,842 samples, 97.87%)</title><rect x="0.0000%" y="1061" width="97.8662%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="1071.50">cheval`std::rt::lang_start_internal</text></g><g><title>cheval`std::rt::lang_start::_{{closure}} (12,842 samples, 97.87%)</title><rect x="0.0000%" y="1045" width="97.8662%" height="15" fill="rgb(254,30,23)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="1055.50">cheval`std::rt::lang_start::_{{closure}}</text></g><g><title>cheval`std::sys_common::backtrace::__rust_begin_short_backtrace (12,842 samples, 97.87%)</title><rect x="0.0000%" y="1029" width="97.8662%" height="15" fill="rgb(235,160,14)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="1039.50">cheval`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>cheval`cheval::main (12,842 samples, 97.87%)</title><rect x="0.0000%" y="1013" width="97.8662%" height="15" fill="rgb(212,155,44)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="1023.50">cheval`cheval::main</text></g><g><title>cheval`tokio::runtime::handle::Handle::enter (12,842 samples, 97.87%)</title><rect x="0.0000%" y="997" width="97.8662%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="1007.50">cheval`tokio::runtime::handle::Handle::enter</text></g><g><title>cheval`tokio::runtime::context::enter (12,842 samples, 97.87%)</title><rect x="0.0000%" y="981" width="97.8662%" height="15" fill="rgb(234,177,6)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="991.50">cheval`tokio::runtime::context::enter</text></g><g><title>cheval`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (12,842 samples, 97.87%)</title><rect x="0.0000%" y="965" width="97.8662%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="975.50">cheval`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on</text></g><g><title>cheval`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (12,842 samples, 97.87%)</title><rect x="0.0000%" y="949" width="97.8662%" height="15" fill="rgb(220,13,46)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="959.50">cheval`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>cheval`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,842 samples, 97.87%)</title><rect x="0.0000%" y="933" width="97.8662%" height="15" fill="rgb(239,221,27)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="943.50">cheval`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>cheval`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (12,842 samples, 97.87%)</title><rect x="0.0000%" y="917" width="97.8662%" height="15" fill="rgb(222,198,25)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="927.50">cheval`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>cheval`cheval::main::_{{closure}} (12,842 samples, 97.87%)</title><rect x="0.0000%" y="901" width="97.8662%" height="15" fill="rgb(211,99,13)" fg:x="0" fg:w="12842"/><text x="0.2500%" y="911.50">cheval`cheval::main::_{{closure}}</text></g><g><title>libsystem_platform.dylib`__bzero (48 samples, 0.37%)</title><rect x="97.5004%" y="885" width="0.3658%" height="15" fill="rgb(232,111,31)" fg:x="12794" fg:w="48"/><text x="97.7504%" y="895.50"></text></g><g><title>dyld`start (12,844 samples, 97.88%)</title><rect x="0.0000%" y="1093" width="97.8814%" height="15" fill="rgb(245,82,37)" fg:x="0" fg:w="12844"/><text x="0.2500%" y="1103.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (2 samples, 0.02%)</title><rect x="97.8662%" y="1077" width="0.0152%" height="15" fill="rgb(227,149,46)" fg:x="12842" fg:w="2"/><text x="98.1162%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.02%)</title><rect x="97.8662%" y="1061" width="0.0152%" height="15" fill="rgb(218,36,50)" fg:x="12842" fg:w="2"/><text x="98.1162%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (92 samples, 0.70%)</title><rect x="97.9424%" y="1077" width="0.7011%" height="15" fill="rgb(226,80,48)" fg:x="12852" fg:w="92"/><text x="98.1924%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.03%)</title><rect x="98.6587%" y="1029" width="0.0305%" height="15" fill="rgb(238,224,15)" fg:x="12946" fg:w="4"/><text x="98.9087%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.03%)</title><rect x="98.6587%" y="1013" width="0.0305%" height="15" fill="rgb(241,136,10)" fg:x="12946" fg:w="4"/><text x="98.9087%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_queue_poke (6 samples, 0.05%)</title><rect x="98.6968%" y="1029" width="0.0457%" height="15" fill="rgb(208,32,45)" fg:x="12951" fg:w="6"/><text x="98.9468%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_send_wakeup_runloop_thread (6 samples, 0.05%)</title><rect x="98.6968%" y="1013" width="0.0457%" height="15" fill="rgb(207,135,9)" fg:x="12951" fg:w="6"/><text x="98.9468%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.05%)</title><rect x="98.6968%" y="997" width="0.0457%" height="15" fill="rgb(206,86,44)" fg:x="12951" fg:w="6"/><text x="98.9468%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_timer_heap_resift (6 samples, 0.05%)</title><rect x="98.7426%" y="1029" width="0.0457%" height="15" fill="rgb(245,177,15)" fg:x="12957" fg:w="6"/><text x="98.9926%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (18 samples, 0.14%)</title><rect x="98.6587%" y="1045" width="0.1372%" height="15" fill="rgb(206,64,50)" fg:x="12946" fg:w="18"/><text x="98.9087%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (20 samples, 0.15%)</title><rect x="98.6587%" y="1061" width="0.1524%" height="15" fill="rgb(234,36,40)" fg:x="12946" fg:w="20"/><text x="98.9087%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (3 samples, 0.02%)</title><rect x="98.8188%" y="1013" width="0.0229%" height="15" fill="rgb(213,64,8)" fg:x="12967" fg:w="3"/><text x="99.0688%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (3 samples, 0.02%)</title><rect x="98.8188%" y="997" width="0.0229%" height="15" fill="rgb(210,75,36)" fg:x="12967" fg:w="3"/><text x="99.0688%" y="1007.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (3 samples, 0.02%)</title><rect x="98.8188%" y="981" width="0.0229%" height="15" fill="rgb(229,88,21)" fg:x="12967" fg:w="3"/><text x="99.0688%" y="991.50"></text></g><g><title>CoreUI`BOMFileClose (2 samples, 0.02%)</title><rect x="98.8264%" y="965" width="0.0152%" height="15" fill="rgb(252,204,47)" fg:x="12968" fg:w="2"/><text x="99.0764%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.03%)</title><rect x="98.8188%" y="1029" width="0.0305%" height="15" fill="rgb(208,77,27)" fg:x="12967" fg:w="4"/><text x="99.0688%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (5 samples, 0.04%)</title><rect x="98.8188%" y="1061" width="0.0381%" height="15" fill="rgb(221,76,26)" fg:x="12967" fg:w="5"/><text x="99.0688%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (5 samples, 0.04%)</title><rect x="98.8188%" y="1045" width="0.0381%" height="15" fill="rgb(225,139,18)" fg:x="12967" fg:w="5"/><text x="99.0688%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (3 samples, 0.02%)</title><rect x="98.8721%" y="1045" width="0.0229%" height="15" fill="rgb(230,137,11)" fg:x="12974" fg:w="3"/><text x="99.1221%" y="1055.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (6 samples, 0.05%)</title><rect x="98.9102%" y="997" width="0.0457%" height="15" fill="rgb(212,28,1)" fg:x="12979" fg:w="6"/><text x="99.1602%" y="1007.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (5 samples, 0.04%)</title><rect x="98.9178%" y="981" width="0.0381%" height="15" fill="rgb(248,164,17)" fg:x="12980" fg:w="5"/><text x="99.1678%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (7 samples, 0.05%)</title><rect x="98.9102%" y="1013" width="0.0533%" height="15" fill="rgb(222,171,42)" fg:x="12979" fg:w="7"/><text x="99.1602%" y="1023.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (4 samples, 0.03%)</title><rect x="98.9712%" y="901" width="0.0305%" height="15" fill="rgb(243,84,45)" fg:x="12987" fg:w="4"/><text x="99.2212%" y="911.50"></text></g><g><title>Metal`MTLDispatchListApply (4 samples, 0.03%)</title><rect x="98.9712%" y="885" width="0.0305%" height="15" fill="rgb(252,49,23)" fg:x="12987" fg:w="4"/><text x="99.2212%" y="895.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (3 samples, 0.02%)</title><rect x="98.9788%" y="869" width="0.0229%" height="15" fill="rgb(215,19,7)" fg:x="12988" fg:w="3"/><text x="99.2288%" y="879.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (2 samples, 0.02%)</title><rect x="98.9864%" y="853" width="0.0152%" height="15" fill="rgb(238,81,41)" fg:x="12989" fg:w="2"/><text x="99.2364%" y="863.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReleaseAllResources (2 samples, 0.02%)</title><rect x="99.0093%" y="853" width="0.0152%" height="15" fill="rgb(210,199,37)" fg:x="12992" fg:w="2"/><text x="99.2593%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.02%)</title><rect x="99.0093%" y="837" width="0.0152%" height="15" fill="rgb(244,192,49)" fg:x="12992" fg:w="2"/><text x="99.2593%" y="847.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (6 samples, 0.05%)</title><rect x="99.0017%" y="869" width="0.0457%" height="15" fill="rgb(226,211,11)" fg:x="12991" fg:w="6"/><text x="99.2517%" y="879.50"></text></g><g><title>Metal`MTLDispatchListApply (2 samples, 0.02%)</title><rect x="99.0474%" y="853" width="0.0152%" height="15" fill="rgb(236,162,54)" fg:x="12997" fg:w="2"/><text x="99.2974%" y="863.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (3 samples, 0.02%)</title><rect x="99.0474%" y="869" width="0.0229%" height="15" fill="rgb(220,229,9)" fg:x="12997" fg:w="3"/><text x="99.2974%" y="879.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (10 samples, 0.08%)</title><rect x="99.0017%" y="885" width="0.0762%" height="15" fill="rgb(250,87,22)" fg:x="12991" fg:w="10"/><text x="99.2517%" y="895.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (12 samples, 0.09%)</title><rect x="99.0017%" y="901" width="0.0914%" height="15" fill="rgb(239,43,17)" fg:x="12991" fg:w="12"/><text x="99.2517%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (18 samples, 0.14%)</title><rect x="98.9636%" y="1013" width="0.1372%" height="15" fill="rgb(231,177,25)" fg:x="12986" fg:w="18"/><text x="99.2136%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (18 samples, 0.14%)</title><rect x="98.9636%" y="997" width="0.1372%" height="15" fill="rgb(219,179,1)" fg:x="12986" fg:w="18"/><text x="99.2136%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (18 samples, 0.14%)</title><rect x="98.9636%" y="981" width="0.1372%" height="15" fill="rgb(238,219,53)" fg:x="12986" fg:w="18"/><text x="99.2136%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (17 samples, 0.13%)</title><rect x="98.9712%" y="965" width="0.1296%" height="15" fill="rgb(232,167,36)" fg:x="12987" fg:w="17"/><text x="99.2212%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (17 samples, 0.13%)</title><rect x="98.9712%" y="949" width="0.1296%" height="15" fill="rgb(244,19,51)" fg:x="12987" fg:w="17"/><text x="99.2212%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (17 samples, 0.13%)</title><rect x="98.9712%" y="933" width="0.1296%" height="15" fill="rgb(224,6,22)" fg:x="12987" fg:w="17"/><text x="99.2212%" y="943.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (17 samples, 0.13%)</title><rect x="98.9712%" y="917" width="0.1296%" height="15" fill="rgb(224,145,5)" fg:x="12987" fg:w="17"/><text x="99.2212%" y="927.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (60 samples, 0.46%)</title><rect x="99.1312%" y="917" width="0.4572%" height="15" fill="rgb(234,130,49)" fg:x="13008" fg:w="60"/><text x="99.3812%" y="927.50"></text></g><g><title>IOKit`IOConnectCallMethod (60 samples, 0.46%)</title><rect x="99.1312%" y="901" width="0.4572%" height="15" fill="rgb(254,6,2)" fg:x="13008" fg:w="60"/><text x="99.3812%" y="911.50"></text></g><g><title>IOKit`io_connect_method (60 samples, 0.46%)</title><rect x="99.1312%" y="885" width="0.4572%" height="15" fill="rgb(208,96,46)" fg:x="13008" fg:w="60"/><text x="99.3812%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (60 samples, 0.46%)</title><rect x="99.1312%" y="869" width="0.4572%" height="15" fill="rgb(239,3,39)" fg:x="13008" fg:w="60"/><text x="99.3812%" y="879.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (62 samples, 0.47%)</title><rect x="99.1312%" y="949" width="0.4725%" height="15" fill="rgb(233,210,1)" fg:x="13008" fg:w="62"/><text x="99.3812%" y="959.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (62 samples, 0.47%)</title><rect x="99.1312%" y="933" width="0.4725%" height="15" fill="rgb(244,137,37)" fg:x="13008" fg:w="62"/><text x="99.3812%" y="943.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (63 samples, 0.48%)</title><rect x="99.1312%" y="965" width="0.4801%" height="15" fill="rgb(240,136,2)" fg:x="13008" fg:w="63"/><text x="99.3812%" y="975.50"></text></g><g><title>AGXMetalG13X`0x00000001d3d738e8 (3 samples, 0.02%)</title><rect x="99.6342%" y="837" width="0.0229%" height="15" fill="rgb(239,18,37)" fg:x="13074" fg:w="3"/><text x="99.8842%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.02%)</title><rect x="99.6342%" y="821" width="0.0229%" height="15" fill="rgb(218,185,22)" fg:x="13074" fg:w="3"/><text x="99.8842%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (3 samples, 0.02%)</title><rect x="99.6342%" y="805" width="0.0229%" height="15" fill="rgb(225,218,4)" fg:x="13074" fg:w="3"/><text x="99.8842%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (3 samples, 0.02%)</title><rect x="99.6342%" y="789" width="0.0229%" height="15" fill="rgb(230,182,32)" fg:x="13074" fg:w="3"/><text x="99.8842%" y="799.50"></text></g><g><title>AGXMetalG13X`0x00000001d3c8b034 (4 samples, 0.03%)</title><rect x="99.6342%" y="853" width="0.0305%" height="15" fill="rgb(242,56,43)" fg:x="13074" fg:w="4"/><text x="99.8842%" y="863.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (7 samples, 0.05%)</title><rect x="99.6190%" y="949" width="0.0533%" height="15" fill="rgb(233,99,24)" fg:x="13072" fg:w="7"/><text x="99.8690%" y="959.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (7 samples, 0.05%)</title><rect x="99.6190%" y="933" width="0.0533%" height="15" fill="rgb(234,209,42)" fg:x="13072" fg:w="7"/><text x="99.8690%" y="943.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (7 samples, 0.05%)</title><rect x="99.6190%" y="917" width="0.0533%" height="15" fill="rgb(227,7,12)" fg:x="13072" fg:w="7"/><text x="99.8690%" y="927.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didScheduledPresent] (5 samples, 0.04%)</title><rect x="99.6342%" y="901" width="0.0381%" height="15" fill="rgb(245,203,43)" fg:x="13074" fg:w="5"/><text x="99.8842%" y="911.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (5 samples, 0.04%)</title><rect x="99.6342%" y="885" width="0.0381%" height="15" fill="rgb(238,205,33)" fg:x="13074" fg:w="5"/><text x="99.8842%" y="895.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (5 samples, 0.04%)</title><rect x="99.6342%" y="869" width="0.0381%" height="15" fill="rgb(231,56,7)" fg:x="13074" fg:w="5"/><text x="99.8842%" y="879.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (5 samples, 0.04%)</title><rect x="99.6723%" y="949" width="0.0381%" height="15" fill="rgb(244,186,29)" fg:x="13079" fg:w="5"/><text x="99.9223%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (5 samples, 0.04%)</title><rect x="99.6723%" y="933" width="0.0381%" height="15" fill="rgb(234,111,31)" fg:x="13079" fg:w="5"/><text x="99.9223%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (5 samples, 0.04%)</title><rect x="99.6723%" y="917" width="0.0381%" height="15" fill="rgb(241,149,10)" fg:x="13079" fg:w="5"/><text x="99.9223%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (7 samples, 0.05%)</title><rect x="99.7104%" y="949" width="0.0533%" height="15" fill="rgb(249,206,44)" fg:x="13084" fg:w="7"/><text x="99.9604%" y="959.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (21 samples, 0.16%)</title><rect x="99.6113%" y="965" width="0.1600%" height="15" fill="rgb(251,153,30)" fg:x="13071" fg:w="21"/><text x="99.8613%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (88 samples, 0.67%)</title><rect x="99.1160%" y="997" width="0.6706%" height="15" fill="rgb(239,152,38)" fg:x="13006" fg:w="88"/><text x="99.3660%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (86 samples, 0.66%)</title><rect x="99.1312%" y="981" width="0.6554%" height="15" fill="rgb(249,139,47)" fg:x="13008" fg:w="86"/><text x="99.3812%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.02%)</title><rect x="99.7714%" y="965" width="0.0152%" height="15" fill="rgb(244,64,35)" fg:x="13092" fg:w="2"/><text x="100.0214%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (3 samples, 0.02%)</title><rect x="99.7866%" y="997" width="0.0229%" height="15" fill="rgb(216,46,15)" fg:x="13094" fg:w="3"/><text x="100.0366%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.02%)</title><rect x="99.7942%" y="981" width="0.0152%" height="15" fill="rgb(250,74,19)" fg:x="13095" fg:w="2"/><text x="100.0442%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_handler_dispose (2 samples, 0.02%)</title><rect x="99.8095%" y="997" width="0.0152%" height="15" fill="rgb(249,42,33)" fg:x="13097" fg:w="2"/><text x="100.0595%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (123 samples, 0.94%)</title><rect x="98.9026%" y="1029" width="0.9374%" height="15" fill="rgb(242,149,17)" fg:x="12978" fg:w="123"/><text x="99.1526%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (96 samples, 0.73%)</title><rect x="99.1084%" y="1013" width="0.7316%" height="15" fill="rgb(244,29,21)" fg:x="13005" fg:w="96"/><text x="99.3584%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (125 samples, 0.95%)</title><rect x="98.8950%" y="1045" width="0.9526%" height="15" fill="rgb(220,130,37)" fg:x="12977" fg:w="125"/><text x="99.1450%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (259 samples, 1.97%)</title><rect x="97.8890%" y="1093" width="1.9738%" height="15" fill="rgb(211,67,2)" fg:x="12845" fg:w="259"/><text x="98.1390%" y="1103.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (160 samples, 1.22%)</title><rect x="98.6435%" y="1077" width="1.2193%" height="15" fill="rgb(235,68,52)" fg:x="12944" fg:w="160"/><text x="98.8935%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (132 samples, 1.01%)</title><rect x="98.8569%" y="1061" width="1.0059%" height="15" fill="rgb(246,142,3)" fg:x="12972" fg:w="132"/><text x="99.1069%" y="1071.50"></text></g><g><title>CoreVideo`CVDisplayLink::getCurrentTime (2 samples, 0.02%)</title><rect x="99.8704%" y="1061" width="0.0152%" height="15" fill="rgb(241,25,7)" fg:x="13105" fg:w="2"/><text x="100.1204%" y="1071.50"></text></g><g><title>MetalKit`DisplayLinkCallback (2 samples, 0.02%)</title><rect x="99.8857%" y="1029" width="0.0152%" height="15" fill="rgb(242,119,39)" fg:x="13107" fg:w="2"/><text x="100.1357%" y="1039.50"></text></g><g><title>CoreVideo`CVDisplayLink::performIO (3 samples, 0.02%)</title><rect x="99.8857%" y="1045" width="0.0229%" height="15" fill="rgb(241,98,45)" fg:x="13107" fg:w="3"/><text x="100.1357%" y="1055.50"></text></g><g><title>CoreVideo`CVDisplayLink::waitUntil (11 samples, 0.08%)</title><rect x="99.9086%" y="1045" width="0.0838%" height="15" fill="rgb(254,28,30)" fg:x="13110" fg:w="11"/><text x="100.1586%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (11 samples, 0.08%)</title><rect x="99.9086%" y="1029" width="0.0838%" height="15" fill="rgb(241,142,54)" fg:x="13110" fg:w="11"/><text x="100.1586%" y="1039.50"></text></g><g><title>all (13,122 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(222,85,15)" fg:x="0" fg:w="13122"/><text x="0.2500%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (18 samples, 0.14%)</title><rect x="99.8628%" y="1093" width="0.1372%" height="15" fill="rgb(210,85,47)" fg:x="13104" fg:w="18"/><text x="100.1128%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (18 samples, 0.14%)</title><rect x="99.8628%" y="1077" width="0.1372%" height="15" fill="rgb(224,206,25)" fg:x="13104" fg:w="18"/><text x="100.1128%" y="1087.50"></text></g><g><title>CoreVideo`CVDisplayLink::runIOThread (15 samples, 0.11%)</title><rect x="99.8857%" y="1061" width="0.1143%" height="15" fill="rgb(243,201,19)" fg:x="13107" fg:w="15"/><text x="100.1357%" y="1071.50"></text></g></svg></svg>